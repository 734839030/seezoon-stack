<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seezoon.dao.modules.sys.SysDictDao">
    <resultMap id="BaseResultMap" type="com.seezoon.dao.modules.sys.entity.SysDict">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_by" jdbcType="INTEGER" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="INTEGER" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
    </resultMap>

    <sql id="Base_Column_List">
    t.id,t.type,t.code,t.name,t.sort,t.status,t.createBy,t.createTime,t.updateBy,t.updateTime,t.remarks
    </sql>

    <sql id="Query_Table" >
    sys_dict t
    </sql>

    <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from <include refid="Query_Table" />
        where t.id = #{id}
    </select>

    <select id="selectByCondition" parameterType="com.seezoon.dao.modules.sys.entity.SysDictCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from <include refid="Query_Table" />
        <where>
            <if test="type != null and type != ''">
            and t.type = #{type}
            </if>
        </where>
        <choose>
            <when test="sortField != null and sortField != '' and sortOrder != null and sortOrder !=''">
                order by t.${sortField} ${sortOrder}
            </when>
            <otherwise>
                order by t.create_time desc
            </otherwise>
        </choose>
    </select>

    <delete id="deleteByPrimaryKey">
        delete t from sys_dict t
        where t.id in
        <foreach item="item" collection="array" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        insert into sys_dict (type,code,name,sort,status,create_by,create_time,update_by,update_time,remarks)
        values
        <foreach item="item" collection="array" separator=",">
            (#{item.type},#{item.code},#{item.name},#{item.sort},#{item.status},#{item.create_by},#{item.create_time},#{item.update_by},#{item.update_time},#{item.remarks})
        </foreach>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.seezoon.dao.modules.sys.entity.SysDict">
        update sys_dict t
        <set>
            <if test="type != null">
                t.type = #{type},
            </if>
            <if test="code != null">
                t.code = #{code},
            </if>
            <if test="name != null">
                t.name = #{name},
            </if>
            <if test="sort != null">
                t.sort = #{sort},
            </if>
            <if test="status != null">
                t.status = #{status},
            </if>
            <if test="updateBy != null">
                t.update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                t.update_time = #{updateTime},
            </if>
            <if test="remarks != null">
                t.remarks = #{remarks}
            </if>
        </set>
        where t.id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.seezoon.dao.modules.sys.entity.SysDict">
        update sys_dict t set
        t.type = #{type}
        ,t.code = #{code}
        ,t.name = #{name}
        ,t.sort = #{sort}
        ,t.status = #{status}
        ,t.update_by = #{updateBy}
        ,t.update_time = #{updateTime}
        ,t.remarks = #{remarks}
        where t.id = #{id}
    </update>
</mapper>