(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{381:function(a,t,r){"use strict";r.r(t);var e=r(26),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"jsr-303-校验"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jsr-303-校验"}},[a._v("#")]),a._v(" JSR-303 校验")]),a._v(" "),r("p",[a._v("JSR-303 是JAVA EE 6 中的一项子规范，叫做Bean Validation，Hibernate Validator 是 Bean Validation 的参考实现 . Hibernate Validator 提供了 JSR 303 规范中所有内置 constraint 的实现，除此之外还有一些附加的 constraint。")]),a._v(" "),r("p",[r("strong",[a._v("验证注解采用"),r("code",[a._v("javax.validation.constraints")]),a._v("下的注解")]),a._v("，具体实现是采用的"),r("code",[a._v("Hibernate Validator")]),a._v("。使用时候可以参考注解类的JavaDoc。")]),a._v(" "),r("h2",{attrs:{id:"validated-和-valid"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#validated-和-valid"}},[a._v("#")]),a._v(" @Validated 和 @Valid")]),a._v(" "),r("p",[a._v("二者基本都可以使校验生效，可在类、字段等")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("@Validated 是@Valid 的一次封装，是Spring提供的校验机制使用，主要具备分组验证功能，但"),r("strong",[a._v("不支持嵌套验证")]),a._v("。")])]),a._v(" "),r("li",[r("p",[a._v("@Valid 是 javax.validation提供，不具备分组，但支持"),r("strong",[a._v("嵌套验证")]),a._v("。")])])]),a._v(" "),r("blockquote",[r("p",[a._v("嵌套验证指的是，类A需要验证，类A中的字段类B也需要验证，这时候只能在B属性上加上@Valid。")])]),a._v(" "),r("p",[a._v("框架默认在类上统一使用@Validated，继承也可以生效，例如：")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("com.seezoon.framework.web.BaseController\ncom.seezoon.admin.framework.service.AbstractBaseService\ncom.seezoon.dao.framework.BaseDao\n")])])]),r("h2",{attrs:{id:"常用验证注解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常用验证注解"}},[a._v("#")]),a._v(" 常用验证注解")]),a._v(" "),r("p",[a._v("这里列举常用的注解，都是包"),r("code",[a._v("javax.validation.constraints")]),a._v(" 下面的，其余如Boolean、时间等，有需求可以自行使用。")]),a._v(" "),r("h2",{attrs:{id:"notnull"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#notnull"}},[a._v("#")]),a._v(" @NotNull")]),a._v(" "),r("p",[a._v("不能为null。")]),a._v(" "),r("h2",{attrs:{id:"notempty"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#notempty"}},[a._v("#")]),a._v(" @NotEmpty")]),a._v(" "),r("p",[a._v("不能为null 不能为空，适用字符、集合、Map、数组的验证。")]),a._v(" "),r("h2",{attrs:{id:"notblank"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#notblank"}},[a._v("#")]),a._v(" @NotBlank")]),a._v(" "),r("p",[a._v("不能为null或者空白符。")]),a._v(" "),r("h2",{attrs:{id:"null"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#null"}},[a._v("#")]),a._v(" @Null")]),a._v(" "),r("p",[a._v("必须为null，用的较少。")]),a._v(" "),r("h2",{attrs:{id:"size"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#size"}},[a._v("#")]),a._v(" @Size")]),a._v(" "),r("p",[a._v("为null的时候不生效，适用字符长度，集合、Map、数组容量校验。")]),a._v(" "),r("h2",{attrs:{id:"pattern"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pattern"}},[a._v("#")]),a._v(" @Pattern")]),a._v(" "),r("p",[a._v("为null的时候不生效，适用字符正则验证。")]),a._v(" "),r("h2",{attrs:{id:"min和-max"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#min和-max"}},[a._v("#")]),a._v(" @Min和@Max")]),a._v(" "),r("p",[a._v("为null的时候不生效，适合数值类验证。")]),a._v(" "),r("h2",{attrs:{id:"email"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#email"}},[a._v("#")]),a._v(" @Email")]),a._v(" "),r("p",[a._v("为null的时候不生效，验证字符是否符合邮箱格式。")]),a._v(" "),r("h2",{attrs:{id:"digits"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#digits"}},[a._v("#")]),a._v(" @Digits")]),a._v(" "),r("p",[a._v("为null的时候不生效，小数验证。")])])}),[],!1,null,null,null);t.default=s.exports}}]);