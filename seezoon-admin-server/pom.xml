<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.seezoon</groupId>
        <artifactId>seezoon-stack</artifactId>
        <version>1.0.0-beta</version>
    </parent>
    <name>Seezoon Admin Server</name>
    <artifactId>seezoon-admin-server</artifactId>

    <properties>
        <!-- 本机开发环境默认的上传路径，${project.parent.basedir} 这里测试取不到-->
        <local.upload.directory>${project.basedir}/../seezoon-admin-web/test/server/upload/static
        </local.upload.directory>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.seezoon</groupId>
            <artifactId>seezoon-dao</artifactId>
        </dependency>
        <dependency>
            <groupId>com.seezoon</groupId>
            <artifactId>seezoon-framework</artifactId>
        </dependency>
        <dependency>
            <groupId>com.seezoon</groupId>
            <artifactId>seezoon-generator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>eu.bitwalker</groupId>
            <artifactId>UserAgentUtils</artifactId>
            <version>${useragent.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba.boot</groupId>
            <artifactId>nacos-config-spring-boot-starter</artifactId>
            <version>${nacos.starter}</version>
        </dependency>
    </dependencies>
    <build>
        <!--
            排除环境依赖配置文件，不打入jar中，
            如果是排除src/main/resources 可以配置
            <build><resources></resources></build>
            -->
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>application-local.properties</exclude>
                        <exclude>logback-spring.xml</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- 打包成结构化的包 -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <attach>false</attach>
                    <appendAssemblyId>false</appendAssemblyId>
                    <finalName>${project.artifactId}</finalName>
                    <descriptors>
                        <descriptor>${project.parent.basedir}/build/assembly/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.13</version>
                <!--<executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>-->
                <configuration>
                    <repository>${docker.repository}/${project.artifactId}</repository>
                    <tag>${project.version}</tag>
                    <buildArgs>
                        <src>target/${project.artifactId}</src>
                        <dest>/data/${project.artifactId}/</dest>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
